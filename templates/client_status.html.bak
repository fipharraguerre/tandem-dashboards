<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Status de Cliente - {{ client_name }}</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='styles.css') }}">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
</head>
<body>
    <div class="container">
        <div class="sidebar">
			<h2>TandemStudio Backups</h2>
			<ul>
				<li><a href="/">General Summary</a></li>
                <li><a href="/unsuccessful_tasks">Errors and Warnings</a></li>
			</ul>
			<h3>Filtrar por Tipo</h3>
			<label><input type="checkbox" class="filter-type" value="BackupJob,Backup" clear> Backup</label><br>
			<label><input type="checkbox" class="filter-type" value="Incremental" clear> Backup incremental</label><br>
			<label><input type="checkbox" class="filter-type" value="Full" clear> Backup full</label><br>
			<label><input type="checkbox" class="filter-type" value="Snapshot" clear> Replica</label><br>
			<label><input type="checkbox" class="filter-type" value="TieringJob" clear> Offload</label><br>
			<br>
			<h3>Filtrar por Resultado</h3>
			<label><input type="checkbox" class="filter-result" value="Success,Completed,ok" clear> Success</label><br>
			<label><input type="checkbox" class="filter-result" value="Warn" clear> Warning</label><br>
			<label><input type="checkbox" class="filter-result" value="Fail" clear> Failed</label><br>

		</div>
        <div class="admin-panel">
            <h2>Estado de {{ client_name }}</h2>
            <table id="statusTable">
                <thead>
                    <tr>
                        <th>Fecha de Creaci√≥n (GMT)</th>
                        <th>Nombre de VM</th>
                        <th>Tipo</th>
                        <th>Resultado</th>
                        <th>Detalle</th>
                    </tr>
                </thead>
                <tbody>
                    {% for result in results %}
                    <tr>
                        <td>{{ result[0] }}</td>
                        <td>{{ result[1] }}</td>
                        <td>{{ result[2] }}</td>
                        <td>{{ result[3] }}</td>
                        <td>{{ result[4] | nl2br | safe }}</td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>

    <h2>History Data</h2>
    <canvas id="historyChart" width="800" height="400"></canvas>
    <script>
        const historyData = {{ history_data|tojson }};
        
        const labels = historyData.map(item => item.datetime);
        const data = historyData.map(item => item.value);
        const descriptors = [...new Set(historyData.map(item => item.descriptor))];

        const datasets = descriptors.map(descriptor => {
            return {
                label: descriptor,
                data: historyData.filter(item => item.descriptor === descriptor).map(item => item.value),
                borderColor: '#' + Math.floor(Math.random() * 16777215).toString(16), // Random color
                fill: false
            };
        });

        const ctx = document.getElementById('historyChart').getContext('2d');
        new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: datasets
            },
            options: {
                responsive: true,
                scales: {
                    x: {
                        type: 'time',
                        time: {
                            unit: 'day'
                        }
                    },
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
	<script>
		$(document).ready(function() {
			// Check if DataTable is already initialized
			if (!$.fn.DataTable.isDataTable('#statusTable')) {
				var table = $('#statusTable').DataTable({
					"paging": false, // Disable pagination to show all items
					"info": false,   // Optionally disable table information
					"searching": false // Disable the global search box if not needed
				});
			}

			function filterTable() {
				var selectedTypes = [];
				var selectedResults = [];

				// Collect selected values for 'Type'
				$('.filter-type:checked').each(function() {
					selectedTypes.push(...$(this).val().split(',')); // Handle multiple types
				});

				// Collect selected values for 'Result'
				$('.filter-result:checked').each(function() {
					selectedResults.push(...$(this).val().split(',')); // Handle multiple statuses
				});

				table.rows().every(function() {
					var data = this.data();

					// Show all rows if no filter is applied
					var showRow = true;

					if (selectedTypes.length > 0) {
						showRow = selectedTypes.some(function(val) {
							var regexType = new RegExp(val.replace('*', '.*'), 'i');
							return regexType.test(data[2]); // Assuming 'Type' is in column 3, index 2
						});
					}

					if (showRow && selectedResults.length > 0) {
						showRow = selectedResults.some(function(val) {
							var regexResult = new RegExp(val.replace('*', '.*'), 'i');
							return regexResult.test(data[3]); // Assuming 'Result' is in column 4, index 3
						});
					}

					if (showRow) {
						$(this.node()).show();
					} else {
						$(this.node()).hide();
					}
				});
			}

			// Attach filterTable to checkbox change events for both 'type' and 'result' filters
			$('.filter-type, .filter-result').on('change', function() {
				filterTable();
			});

			// Initial filtering
			filterTable();
		});
	</script>



</body>
</html>

